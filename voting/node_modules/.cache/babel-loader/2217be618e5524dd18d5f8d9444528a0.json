{"ast":null,"code":"var _jsxFileName = \"/Users/hector/Documents/Galvanize/react-exercise/react-starter-apps/voting/src/components/Voting.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Voting extends Component {\n  constructor(props) {}\n\n  incrementVote(languageId) {\n    this.languages.map(language => {\n      if (languageId === language.id) {\n        const newVotes = this.languages[language.id].votes + 1;\n        console.log(newVotes);\n        this.setState({\n          languages: 5\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languages\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Voting;","map":{"version":3,"sources":["/Users/hector/Documents/Galvanize/react-exercise/react-starter-apps/voting/src/components/Voting.js"],"names":["React","Component","Voting","constructor","props","incrementVote","languageId","languages","map","language","id","newVotes","votes","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,YAAP;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ,CAElB;;AAYDC,EAAAA,aAAa,CAACC,UAAD,EAAa;AACtB,SAAKC,SAAL,CAAeC,GAAf,CAAmBC,QAAQ,IAAI;AAC3B,UAAIH,UAAU,KAAKG,QAAQ,CAACC,EAA5B,EAAgC;AAC5B,cAAMC,QAAQ,GAAG,KAAKJ,SAAL,CAAeE,QAAQ,CAACC,EAAxB,EAA4BE,KAA5B,GAAoC,CAArD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,aAAKI,QAAL,CAAc;AAACR,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACH;AACJ,KAND;AASH;;AAGJS,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACa;AAAA;AAAA;AAAA;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,YADD;AAaA;;AA3C4B;;AA6C9B,eAAed,MAAf","sourcesContent":["import React,{Component} from 'react';\nimport '../App.css';\n\nclass Voting extends Component{\n\n    constructor(props) {\n        \n    }\n    \n\tlanguages = [\n            {id: 1, language: \"Javascript\", votes: 0},\n            {id: 2, language: \"Python\", votes: 0},\n            {id: 3, language: \"Go\", votes: 0},\n            {id: 4, language: \"Java\", votes: 0},\n            {id: 5, language: \"Typescript\", votes: 0},\n            {id: 7, language: \"Ruby\", votes: 0},\n            {id: 6, language: \"Elixir\", votes: 0},\n    ]\n\n    incrementVote(languageId) {\n        this.languages.map(language => {\n            if (languageId === language.id) {\n                const newVotes = this.languages[language.id].votes + 1;\n                console.log(newVotes);\n                this.setState({languages: 5})\n            }\n        }) \n    \n        \n    }\n\t\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"languages\">\n                <ul>\n                    {/* {\n                        this.languages.map(language =>\n                            <li className=\"language\" key={language.id}>\n                                <p className=\"voteCount\">{language.votes}</p> {language.language} \n                                <button onClick={() => this.incrementVote(language.id)} className=\"btn-vote\">vote ü§òüèª</button>\n                            </li>)\n                    } */}\n                </ul>\n            </div>\n\t\t);\n\t}\n}\nexport default Voting;"]},"metadata":{},"sourceType":"module"}