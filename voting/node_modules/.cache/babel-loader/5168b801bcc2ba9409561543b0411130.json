{"ast":null,"code":"var _jsxFileName = \"/Users/hector/Documents/Galvanize/react-exercise/react-starter-apps/voting/src/components/Voting.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Voting extends Component {\n  constructor(props) {\n    super(props);\n    this.languages = {\n      id: 1,\n      language: \"Javascript\",\n      votes: 0\n    };\n    console.log(props.incrementVote);\n  }\n\n  // {id: 2, language: \"Python\", votes: 0},\n  // {id: 3, language: \"Go\", votes: 0},\n  // {id: 4, language: \"Java\", votes: 0},\n  // {id: 5, language: \"Typescript\", votes: 0},\n  // {id: 7, language: \"Ruby\", votes: 0},\n  // {id: 6, language: \"Elixir\", votes: 0},\n  incrementVote() {\n    // this.languages.map(language => {\n    //     if (languageId === language.id) {\n    //         const newVotes = this.languages[language.id].votes + 1;\n    //         console.log(newVotes);\n    //         this.setState({languages: 5})\n    //     }\n    // }) \n    this.setState({\n      votes: this.languages.votes + 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languages\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: this.languages.votes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Voting;","map":{"version":3,"sources":["/Users/hector/Documents/Galvanize/react-exercise/react-starter-apps/voting/src/components/Voting.js"],"names":["React","Component","Voting","constructor","props","languages","id","language","votes","console","log","incrementVote","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,YAAP;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAKtBC,SALsB,GAKV;AAACC,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,QAAQ,EAAE,YAAlB;AAAgCC,MAAAA,KAAK,EAAE;AAAvC,KALU;AAEfC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,aAAlB;AACH;;AAGO;AACA;AACA;AACA;AACA;AACA;AAGRA,EAAAA,aAAa,GAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAKC,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAE,KAAKH,SAAL,CAAeG,KAAf,GAAuB;AAA/B,KAAd;AAGH;;AAGJK,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACa;AAAA,+BACI;AAAA,oBAAK,KAAKR,SAAL,CAAeG;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,YADD;AAcA;;AA9C4B;;AAgD9B,eAAeN,MAAf","sourcesContent":["import React,{Component} from 'react';\nimport '../App.css';\n\nclass Voting extends Component{\n\n    constructor(props) {\n        super(props);\n        console.log(props.incrementVote)\n    }\n    \n\tlanguages = {id: 1, language: \"Javascript\", votes: 0}\n            // {id: 2, language: \"Python\", votes: 0},\n            // {id: 3, language: \"Go\", votes: 0},\n            // {id: 4, language: \"Java\", votes: 0},\n            // {id: 5, language: \"Typescript\", votes: 0},\n            // {id: 7, language: \"Ruby\", votes: 0},\n            // {id: 6, language: \"Elixir\", votes: 0},\n    \n\n    incrementVote() {\n        // this.languages.map(language => {\n        //     if (languageId === language.id) {\n        //         const newVotes = this.languages[language.id].votes + 1;\n        //         console.log(newVotes);\n        //         this.setState({languages: 5})\n        //     }\n        // }) \n\n        this.setState({votes: this.languages.votes + 1})\n    \n        \n    }\n\t\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"languages\">\n                <ul>\n                    <li>{this.languages.votes}</li>\n                    {/* {\n                        this.languages.map(language =>\n                            <li className=\"language\" key={language.id}>\n                                <p className=\"voteCount\">{language.votes}</p> {language.language} \n                                <button onClick={() => this.incrementVote(language.id)} className=\"btn-vote\">vote ü§òüèª</button>\n                            </li>)\n                    } */}\n                </ul>\n            </div>\n\t\t);\n\t}\n}\nexport default Voting;"]},"metadata":{},"sourceType":"module"}